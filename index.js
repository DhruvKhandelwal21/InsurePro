import fs from 'fs'
import express from 'express'
const app = new express();
const dataFilePath = 'file.txt';
const data = fs.readFileSync(dataFilePath, 'utf8').split('\n');
let aggregateDataByMonth = {};
let mostSoldItemPerMonth = {};
let mostRevenueItemPerMonth = {};
let totalSales = 0;
let totalSalesPerMonth = {};
let aggregateOfMostSoldItem = {};
// line by line read the file to store the data in an array
const dataArray = data.map(line => {
    const [date, sku, unitPrice, quantity, totalPrice] = line.split(',');
    return {
        date: date,
        sku: sku,
        unitPrice: parseInt(unitPrice),
        quantity: parseInt(quantity),
        totalPrice: parseInt(totalPrice)
    };
});
// calculated the aggregate sum of quantity and total revenue of each SKU for every month
dataArray.forEach((ele) => {
    const month = Number(ele.date.split('-')[1]);
    if(totalSalesPerMonth[month]){
        totalSalesPerMonth[month]+=ele.totalPrice;
    }else{
        totalSalesPerMonth[month]=ele.totalPrice;
    }
    totalSales+=ele.totalPrice;
    if (!aggregateDataByMonth[month]) {
        aggregateDataByMonth[month] = [];
    }

    if (!aggregateDataByMonth[month][ele.sku]) {
        aggregateDataByMonth[month][ele.sku] = {qty: ele.quantity, totalPrice: ele.totalPrice};
    } else {
        aggregateDataByMonth[month][ele.sku].qty += ele.quantity;
        aggregateDataByMonth[month][ele.sku].totalPrice+= ele.totalPrice
    }
    mostSoldItemPerMonth[month]
});

// Calculated the maximum sold item and item that generated most revenue for each month
Object.keys(aggregateDataByMonth).map((ele)=>{
    const data = aggregateDataByMonth[ele];
    let maxQty = 0;
    let maxRevenue = 0;
    let mostSoldItem = '';
    let mostRevenueGenItem = '';

    Object.entries(data).forEach(([item, data]) => {
        if (data.qty > maxQty) {
            maxQty = data.qty;
            mostSoldItem = item;
        }
        if(data.totalPrice > maxRevenue){
            maxRevenue = data.totalPrice;
            mostRevenueGenItem = item;
        }
    });

    mostSoldItemPerMonth[ele] = { item: mostSoldItem, qty: maxQty };
    mostRevenueItemPerMonth[ele] = {item: mostRevenueGenItem, revenue: maxRevenue}
})
// calculated the minimum, maximum and average sales of most sold item each month
Object.keys(mostSoldItemPerMonth)?.map((ele)=> {
    const item = mostSoldItemPerMonth[ele].item;
  let itemData  = dataArray
    .filter((e) => Number(e.date.split('-')[1]) === Number(ele) && e.sku === item)
    .map((e) => e.totalPrice);
  let mn = Math.min(...itemData);
  let mx = Math.max(...itemData);
  let total = itemData.reduce((acc, ele) => acc + ele, 0);
  let avg = Number(parseFloat(total/itemData.length).toFixed(2));
  aggregateOfMostSoldItem[ele] = { [item]: { min: mn, max: mx, avg: avg }};
})

console.log('Total Sales', totalSales)
console.log('Total Sales Per Month', totalSalesPerMonth)
console.log('Most Sold Item Per Month',mostSoldItemPerMonth)
console.log('Most Revenue generated by the Item',mostRevenueItemPerMonth)
console.log('Minimum, Maximum and Average sales of most sold item',aggregateOfMostSoldItem)


  app.listen(3000, () => {
    console.log('Server running at port 3000');
  });
